import numpy as np
import matplotlib.pyplot as plt
import csv

# x = [1.0, 0.75, 1.5, 0.75, 0.25, 1.0, 1.5, 1.0, 0.25, 0.25, 0.25, 0.5, 0.5, 0.25, 0.5, 0.25, 0.25, 0.5, 1.75, 0.5, 0.25, 0.25, 0.25, 0.5, 0.25, 0.5, 0.25, 0.25, 1.0, 0.5, 1.25, 0.5, 0.5, 1.0, 0.25, 0.5, 1.0, 0.25, 0.5, 0.75, 0.5, 1.0, 0.25, 0.25, 0.75, 0.75, 0.75, 0.5, 0.25, 0.5, 0.75, 0.25, 0.5, 0.5, 1.0, 0.5, 0.5, 0.25, 1.0, 0.5, 0.5, 0.75, 0.75, 0.25, 1.5, 0.5, 0.5, 1.0, 0.5, 0.5, 0.5, 0.25, 0.75, 0.75, 0.5, 1.0, 0.75, 0.25, 0.75, 0.25, 0.25, 0.75, 0.75, 0.25, 0.25, 0.75, 0.75, 0.75, 0.5, 0.25, 0.25, 0.75, 0.25, 1.0, 0.25, 0.25, 0.75, 0.75, 0.25, 1.25]
# x = np.asarray(x)
# print(x.mean(), x.std())
# # plt.hist(x, bins=[0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 1.75])
# # plt.show()

# y = [2.399998903274536, 2.6000022888183594, 2.2000014781951904, 2.2000014781951904, 2.2000014781951904, 2.499997615814209, 2.7000010013580322, 2.6000022888183594, 2.2000014781951904, 2.6000022888183594, 2.499997615814209, 2.2000014781951904, 2.3000001907348633, 2.7000010013580322, 2.7000010013580322, 2.7000010013580322, 2.6000022888183594, 2.6000022888183594, 2.6000022888183594, 2.2000014781951904, 2.3000001907348633, 2.6000022888183594, 2.1000027656555176, 1.9999980926513672, 2.899998426437378, 2.3000001907348633, 2.399998903274536, 2.6000022888183594, 2.6000022888183594, 2.3000001907348633, 2.1000027656555176, 2.499997615814209, 1.8999993801116943, 2.2000014781951904, 2.399998903274536, 2.3000001907348633, 2.7000010013580322, 2.499997615814209, 2.799999713897705, 2.399998903274536, 2.2000014781951904, 2.3000001907348633, 2.6000022888183594, 2.3000001907348633, 2.3000001907348633, 2.1000027656555176, 2.499997615814209, 2.2000014781951904, 2.399998903274536, 2.499997615814209, 2.3000001907348633, 2.399998903274536, 2.799999713897705, 2.3000001907348633, 2.1000027656555176, 2.499997615814209, 2.6000022888183594, 2.499997615814209, 2.3000001907348633, 1.7000019550323486, 2.3000001907348633, 2.399998903274536, 2.499997615814209, 2.2000014781951904, 1.9999980926513672, 2.499997615814209, 2.499997615814209, 2.6000022888183594, 2.399998903274536, 2.399998903274536, 2.499997615814209, 2.6000022888183594, 2.7000010013580322, 2.6000022888183594, 2.3000001907348633, 2.899998426437378, 2.6000022888183594, 2.2000014781951904, 2.2000014781951904, 2.499997615814209, 2.399998903274536, 2.2000014781951904, 2.1000027656555176, 2.3000001907348633, 2.7000010013580322, 2.399998903274536, 2.1000027656555176, 2.799999713897705, 2.399998903274536, 2.1000027656555176, 2.1000027656555176, 2.399998903274536, 2.499997615814209, 2.2000014781951904, 2.7000010013580322, 2.499997615814209, 2.6000022888183594, 2.499997615814209, 2.399998903274536, 1.8999993801116943]
# y = np.asarray(y)
# print(y.mean(), y.std())
# # plt.hist(y)
# # plt.show()

# z = [5.4000020027160645, 6.499999761581421, 4.199999570846558, 5.59999942779541, 4.500001668930054, 5.199998617172241, 3.3999979496002197, 4.799997806549072, 4.400002956390381, 4.600000381469727, 4.400002956390381, 4.699999094009399, 3.7999987602233887, 4.400002956390381, 3.700000047683716, 3.8999974727630615, 4.199999570846558, 4.100000858306885, 5.4000020027160645, 4.100000858306885, 5.299997329711914, 4.2999982833862305, 4.600000381469727, 4.000002145767212, 4.600000381469727, 4.600000381469727, 5.59999942779541, 3.700000047683716, 7.200002670288086, 3.700000047683716, 4.500001668930054, 4.2999982833862305, 4.000002145767212, 4.400002956390381, 5.500000715255737, 6.000000238418579, 4.600000381469727, 4.799997806549072, 3.8999974727630615, 4.400002956390381, 5.900001525878906, 7.400000095367432, 4.699999094009399, 3.7999987602233887, 4.100000858306885, 4.100000858306885, 4.2999982833862305, 3.8999974727630615, 4.400002956390381, 4.400002956390381, 4.400002956390381, 5.199998617172241, 3.7999987602233887, 3.600001335144043, 4.900002479553223, 5.199998617172241, 4.699999094009399, 3.50000262260437, 4.500001668930054, 5.299997329711914, 4.100000858306885, 5.0000011920928955, 3.700000047683716, 4.600000381469727, 4.100000858306885, 4.900002479553223, 4.2999982833862305, 4.100000858306885, 5.199998617172241, 3.200000524520874, 6.499999761581421, 5.099999904632568, 4.699999094009399, 4.2999982833862305, 4.199999570846558, 5.099999904632568, 4.500001668930054, 3.700000047683716, 4.2999982833862305, 3.8999974727630615, 4.799997806549072, 3.600001335144043, 4.199999570846558, 3.8999974727630615, 3.299999237060547, 3.700000047683716, 4.199999570846558, 5.500000715255737, 3.600001335144043, 2.999997138977051, 4.199999570846558, 5.099999904632568, 4.699999094009399, 5.4000020027160645, 4.199999570846558, 4.000002145767212, 4.000002145767212, 3.7999987602233887, 5.59999942779541, 6.999999284744263]
# z = np.asarray(z)
# print(z.mean(), z.std())

# zeros = [4.799997806549072, 4.2999982833862305, 3.8999974727630615, 4.2999982833862305, 5.199998617172241, 5.59999942779541, 3.8999974727630615, 3.8999974727630615, 3.8999974727630615, 3.600001335144043, 4.400002956390381, 3.8999974727630615, 4.100000858306885, 5.0000011920928955, 5.099999904632568, 4.000002145767212, 4.900002479553223, 5.0000011920928955, 5.0000011920928955, 3.8999974727630615, 4.600000381469727, 3.50000262260437, 5.199998617172241, 5.500000715255737, 3.8999974727630615, 5.099999904632568, 4.000002145767212, 5.199998617172241, 4.400002956390381, 4.100000858306885, 4.600000381469727, 3.600001335144043, 4.100000858306885, 4.199999570846558, 4.000002145767212, 3.8999974727630615, 3.700000047683716, 4.199999570846558, 3.7999987602233887, 5.0000011920928955, 4.600000381469727, 4.400002956390381, 4.400002956390381, 4.699999094009399, 5.199998617172241, 4.2999982833862305, 4.600000381469727, 3.7999987602233887, 5.4000020027160645, 5.099999904632568, 4.799997806549072, 3.7999987602233887, 5.4000020027160645, 4.799997806549072, 3.600001335144043, 3.8999974727630615, 5.099999904632568, 3.299999237060547, 4.000002145767212, 3.700000047683716, 3.8999974727630615, 4.799997806549072, 5.59999942779541, 4.000002145767212, 4.100000858306885, 4.900002479553223, 3.3999979496002197, 3.3999979496002197, 3.8999974727630615, 4.2999982833862305, 4.2999982833862305, 4.500001668930054, 4.500001668930054, 4.900002479553223, 4.2999982833862305, 4.400002956390381, 4.400002956390381, 4.199999570846558, 4.900002479553223, 4.500001668930054, 4.100000858306885, 4.000002145767212, 4.600000381469727, 3.8999974727630615, 4.100000858306885, 5.800002813339233, 4.000002145767212, 4.500001668930054, 3.8999974727630615, 4.500001668930054, 4.799997806549072, 4.699999094009399, 4.600000381469727, 5.099999904632568, 3.700000047683716, 3.600001335144043, 3.8999974727630615, 6.499999761581421, 4.100000858306885, 4.199999570846558]
# zeros = np.asarray(zeros)
# print(zeros.mean(), zeros.std())

# others = [2.499997615814209, 2.499997615814209, 2.499997615814209, 2.399998903274536, 3.200000524520874, 3.200000524520874, 2.499997615814209, 2.6000022888183594, 3.100001811981201, 3.7999987602233887, 3.100001811981201, 2.7000010013580322, 2.799999713897705, 2.3000001907348633, 3.299999237060547, 3.600001335144043, 2.3000001907348633, 3.200000524520874, 2.999997138977051, 2.2000014781951904, 2.7000010013580322, 2.799999713897705, 2.6000022888183594, 3.299999237060547, 2.799999713897705, 2.799999713897705, 2.1000027656555176, 2.6000022888183594, 2.899998426437378, 2.3000001907348633, 2.6000022888183594, 2.899998426437378, 1.9999980926513672, 3.100001811981201, 2.499997615814209, 1.9999980926513672, 2.7000010013580322, 2.7000010013580322, 2.6000022888183594, 2.499997615814209, 3.600001335144043, 1.8999993801116943, 3.200000524520874, 2.899998426437378, 3.299999237060547, 2.6000022888183594, 2.7000010013580322, 2.6000022888183594, 2.399998903274536, 2.899998426437378, 2.899998426437378, 3.299999237060547, 2.399998903274536, 2.6000022888183594, 3.200000524520874, 2.6000022888183594, 2.399998903274536, 2.899998426437378, 2.999997138977051, 2.2000014781951904, 3.299999237060547, 2.899998426437378, 2.999997138977051, 2.799999713897705, 2.899998426437378, 2.6000022888183594, 2.7000010013580322, 2.6000022888183594, 2.7000010013580322, 2.999997138977051, 2.499997615814209, 2.799999713897705, 3.3999979496002197, 3.3999979496002197, 2.499997615814209, 2.7000010013580322, 2.799999713897705, 2.399998903274536, 3.200000524520874, 2.399998903274536, 2.499997615814209, 2.399998903274536, 2.899998426437378, 2.999997138977051, 3.200000524520874, 3.100001811981201, 2.499997615814209, 2.7000010013580322, 2.899998426437378, 2.999997138977051, 3.600001335144043, 2.799999713897705, 2.7000010013580322, 2.899998426437378, 2.7000010013580322, 2.399998903274536, 4.199999570846558, 2.399998903274536, 2.499997615814209, 2.399998903274536]
# others = np.asarray(others)
# print(others.mean(), others.std())


alphas = []
errors = []
losses = []
with open("weight_and_activity_alphas_more_precise.csv") as csv_file:
    csv_reader = csv.reader(csv_file, delimiter = ',')
    
    for line_count, row in enumerate(csv_reader):
        if line_count == 0:
            for item in row:
                alphas.append(item)
        elif line_count == 1:
            for item in row:
                errors.append(float(item))
        else:
            for item in row:
                losses.append(float(item))

print(alphas)
print(errors)
print(losses)

# plt.plot(alphas, errors)
# plt.show()

sorted_alphas = [x for _,x in sorted(zip(errors, alphas))]
sorted_losses = [x for _,x in sorted(zip(errors, losses))]
sorted_errors = sorted(errors)

for i, alpha in enumerate(sorted_alphas):
    print(f"{i+1}) alpha = {alpha}, error = {sorted_errors[i]}, loss = {sorted_losses[i]}")
    if i > 13:
        break